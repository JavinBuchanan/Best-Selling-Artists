if(!require(tidyverse)) install.packages("tidyverse") 
if(!require(kableExtra)) install.packages("kableExtra")
if(!require(tidyr)) install.packages("tidyr")
if(!require(tidyverse)) install.packages("tidyverse")
if(!require(stringr)) install.packages("stringr")
if(!require(ggplot2)) install.packages("ggplot2")
if(!require(dplyr)) install.packages("dplyr")
if(!require(caret)) install.packages("caret")
if(!require(e1071)) install.packages("e1071")
if(!require(class)) install.packages("class")
if(!require(ROCR)) install.packages("ROCR")
if(!require(randomForest)) install.packages("randomForest")
if(!require(PRROC)) install.packages("PRROC")
if(!require(reshape2)) install.packages("reshape2")
if(!require(funModeling)) install.packages("funModeling")
if(!require(corrplot)) install.packages("corrplot")
if(!require(dplyr)) install.packages("dplyr")
if(!require(gridExtra))install.packages("gridExtra")
if(!require(DescTools))install.packages("DescTools")
# Loading all needed libraries

library(dplyr)
library(tidyverse)
library(kableExtra)
library(tidyr)
library(ggplot2)
library(caret)
library(e1071)
library(class)
library(ROCR)
library(randomForest)
library(PRROC)
library(reshape2)
library(funModeling)
library(corrplot)
library(dplyr)
library(DescTools)

#code to access dataset
##loading the dataset from my github profile
 data<- read.csv("https://raw.githubusercontent.com/JavinBuchanan/Best-Selling-Artists/main/Raw%20DataSet%20for%20Best%20Selling%20Artists.csv")

 #Finding the amount of observations and variables in the datset
 dim(data)

 #Viewing the datatypes of the variables in the dataset
 str(data)

#Finding out if there any data with N/As
sapply(data, function(m){
  sum(is.na(m))
})

#removing characters from TCU and sales column
data$TCU<-gsub("million","",as.character(data$TCU))
data$Sales<-gsub("million",".",as.character(data$Sales))
data$Sales<-gsub("\\..*","",as.character(data$Sales))
data$Genre<-gsub("\\/.*","",as.character(data$Genre))
data$Artist <- gsub("Ã©", "",as.character(data$Artist))

#removing multiple ranges for each cell in period_active
data[9, "period_active"] <- "1965-2014"
data[15, "period_active"] <- "1971-present"
data[29, "period_active"] <- "1980-present"
data[31, "period_active"] <- "1972-present"
data[32, "period_active"] <- "1935-1995"
data[45, "period_active"] <- "1963-2012"
data[77, "period_active"] <- "1967-present"
data[117, "period_active"] <- "1977-2008"

#changing present to 2022 to use integers only 
data$period_active<-gsub("present","2022",as.character(data$period_active))

library(dplyr)
data[,"Genre", drop = FALSE]

data <-
  data %>%
  mutate(Genre = as_factor(Genre))
data$`TCU` <- as.numeric(data$`TCU`)  # Convert End Year to numeric
str (data)

#removing multiple ranges for each cell in Genre
data[9, "Genre"] <- "Rock"
data[2, "Genre"] <- "Rock"
data[7, "Genre"] <- "Rock"
data[17, "Genre"] <- "Rock"
data[25, "Genre"] <- "Rock"
data[28, "Genre"] <- "Rock"
data[39, "Genre"] <- "Rock"
data[41, "Genre"] <- "Rock"
data[43, "Genre"] <- "Rock"
data[47, "Genre"] <- "Rock"
data[48, "Genre"] <- "Rock"
data[53, "Genre"] <- "Pop"
data[54, "Genre"] <- "Rock"
data[64, "Genre"] <- "Rock"
data[68, "Genre"] <- "Rock"
data[76, "Genre"] <- "Rock"
data[77, "Genre"] <- "Rock"
data[78, "Genre"] <- "Rock"
data[92, "Genre"] <- "Rock"
data[96, "Genre"] <- "Pop"
data[99, "Genre"] <- "Rock"
data[104, "Genre"] <- "Rock"
data[110, "Genre"] <- "Rock"
data[113, "Genre"] <- "Rock"
data[118, "Genre"] <- "Rock"
data[120, "Genre"] <- "Rock"

# load dplyr and tidyr library
library(tidyr)

# Split name column into start year and end year
data <- data %>% separate(period_active, c('Start Year', 'End Year'))  #Separation of period active column


data$`Start Year` <- as.numeric(data$`Start Year`)  # Convert Start Year to numeric
data$`End Year` <- as.numeric(data$`End Year`)  # Convert End Year to numeric

data$'Years Active' <- (data$'End Year' - data$'Start Year')

#changing position of column 'Years Active'
data <- data %>% relocate('Years Active', .before = Year)  


#changing column 'Year' to 'Year of First Chart Entry'
colnames(data)[6] <- "Year of First Chart Entry" 

# Central Tendicies
datamean<- mean(data$TCU)

datamedian<-median(data$TCU)

# Define the Mode function
Mode <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}

# Find the mode of the column
mode_of_column <- Mode(data$TCU)

#PROBLEM STATEMENT 1

usfilter<- filter(data, Country=='United States')
view(usfilter)
bothfilters<- filter(usfilter, TCU>160)
view(bothfilters)


#PROBLEM STATEMENT 2

random_sample<- data[sample(nrow(data), 50), ]
